var e={d:(t,a)=>{for(var r in a)e.o(a,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:a[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)},t={};e.d(t,{s:()=>J});const a={config:{},parts:[],plates:[],errors:null,currentIndexPlate:0,symbols:{unusedSpace:0,rect:1,startSpace:2,alternateSpace:3,divide:4},statistic:{},sizeStep:null,countPart:null,maxIteration:100},r={_state:{},init(){this._state=a},getState(){return this._state},getErrors(){return{errors:this._state.errors}},setState(e){this._state={...this._state,...e}}};const n=function(e){const t=[];return[e.length,e.height,e.minPart].some((e=>!Number.isInteger(e)||e<=0))&&t.push("Element is not integer"),(e.maxStack<0||!Number.isInteger(e.maxStack))&&t.push("Max Stack is not valid"),(e.optimization<0||!Number.isInteger(e.optimization)||e.optimization>10)&&t.push("Optimization level is not valid"),e.parts.filter((e=>void 0===e.length||void 0===e.height||void 0===e.count||void 0===e.hem||void 0===e.edge||!Number.isInteger(e.length)||!Number.isInteger(e.height)||!Number.isInteger(e.count)||!Number.isInteger(e.hem)||!Number.isInteger(e.edge)||e.length<=0||e.height<=0||e.count<=0||e.hem<0||e.edge<0)).length&&t.push("Parts is not valid"),e.parts.filter((t=>t.length>e.length*(e.maxStack+1)||t.height>e.height-t.hem-t.edge||t.length<e.minPart||t.height<e.minPart)).length&&t.push("Parts is not valid (diapason)"),!Number.isNaN(e.step)&&[.1,.2,.25,.5,1].find((t=>t===e.step))||t.push("Step is not valid"),!0!==e.nameIsPrefix&&!1!==e.nameIsPrefix&&t.push("nameIsPrefix is not bool"),!0!==e.rotate&&!1!==e.rotate&&t.push("rotate is not bool"),!0!==e.cut&&!1!==e.cut&&t.push("cut is not bool"),!0!==e.showPartInName&&!1!==e.showPartInName&&t.push("showPartInName is not bool"),!0!==e.getAllData&&!1!==e.getAllData&&t.push("getAllData is not bool"),!0!==e.prepareOutputPlates&&!1!==e.prepareOutputPlates&&t.push("prepareOutputPlates is not bool"),!0!==e.axisX&&!1!==e.axisX&&t.push("axisX is not bool"),t};const s=function(e){return{name:e.name.toString(),partName:e.partName.toString(),length:+e.length,height:+e.height,step:+e.step,minPart:+e.minPart,maxStack:+e.maxStack,optimization:+e.optimization,parts:e.parts.map((e=>({...e,name:e.name,length:+e.length,height:+e.height+ +e.hem+ +e.edge,count:+e.count,hem:+e.hem,edge:+e.edge}))),nameIsPrefix:e.nameIsPrefix,rotate:e.rotate,cut:e.cut,showPartInName:e.showPartInName,getAllData:e.getAllData,prepareOutputPlates:e.prepareOutputPlates,axisX:e.axisX}};const i=function(e=8){return Math.random().toString(36).substr(2,e)};const o=function(e,t="w"){return t?e.sort(((e,a)=>a[t]-e[t])):e.sort(((e,t)=>t-e))};const l=function(e,t,a,r,n,s){let l=[],p=[];return e.forEach(((e,r)=>{for(let o=1;o<=e.count;o++){const l=e.name?`${n?t:""}${e.name}`:`${t} ${r+1}-${o}`,h=i(),c=Math.ceil(e.length/a),E=e.height,u=e.length%a||a,_=e.hem,m=e.edge,T=u>0&&u<s?s-u:0;for(let t=0,r=1;t<e.length;t+=a,r++){const t=1===r?u+T:2===r?a-T:a;p.push({...e,name:l,w:t,h:E,id:h,part:r,parts:c,hem:_,edge:m,rotate:!1})}}})),p=p.reduce(((e,t)=>(e[t.w]=e[t.w]?[...e[t.w],t]:[t],e)),{}),Object.keys(p).forEach((e=>p[e].length>1&&o(p[e],"h"))),o(Object.keys(p),!1).forEach((e=>l.push(...p[e]))),l};const p=function(e,t,a="floor"){if(!["round","ceil","floor"].find((e=>e===a)))throw new Error("mode is error");return Math[a](e/t)*t};const h=function(e,t,a,r,n=S(),s=!1){const i=a?t[n].size:t[n].length,l=[],p=a?t[n].height:t[n].size,h=t[n].matrix,c=t[n].spaceSymbol===r.startSpace?r.alternateSpace:r.startSpace,E=s?r.divide:r.rect,u=e-1>0?e-1:1;t[n].spaceSymbol=c;const _=(e,t)=>h[e][t]===r.rect||h[e][t]===E,m=(e,t,a,r)=>{let n=r;for(;n>1;){if(n=Math.ceil(n/2),e[t]!==e[t-1])return t;_(a,t)||e[t]!==e[t+1]?t+=n:t-=n}return t},T=(e,t)=>{let a=0,r=0;for(let r=t;r<p&&!_(r,e);r++)a++;for(let n=t-1;n>=0&&!_(n,e);n--)r++,a++;return{h:a,y:r}},g=(e,t,a)=>{let r=0;for(let n=e;n<i&&(!_(t,n)&&!_(t-a,n));n++)r++;return{w:r,x:0}};for(let e=0;e<p;e++)for(let t=0;t<i;t+=u)if(h[e][t]!==r.rect&&h[e][t]!==c&&h[e][t]!==E){t=m(h[e],t,e,u);const{h:a,y:r}=T(t,e),{w:s,x:i}=g(t,e,r);k({x:t-i,w:s,y:e-r,h:a,index:n,value:c}),l.push({x:t-i,y:e-r,w:s,h:a,fromPlate:n}),t+=s}return s?l:Z(n,o(l))};const c=function(e,t,a,r,n,s){let i,o,l=e.length-1;const p=e[l]?.size||t;if(p===t){const e=Array.from(Array(r),(()=>new Array(a).fill(s)));A({length:a,height:r,items:[],matrix:e,size:t,unusedSpace:[{x:0,y:0,w:a,h:r}],spaceSymbol:n}),i=!0}else o=O(p,"ceil"),o===p&&o<t&&(o=O(p+1,"ceil")),y(l,o),i=!1;return i};const E=function(e,t,a,r,n){let s=0;const i=[];for(let o=e-t,l=a-1;o>=0;o-=t,l--){for(let e=0;e<L(r);e++){const t=b(r,e),a=t.rotate&&n||!t.rotate&&!n?t.h:t.w;(n?t.x:t.y)+a>o&&(i.push({...t}),k({x:t.x,w:t.w,y:t.y,h:t.h,rotate:t.rotate,value:0,index:r}),w(r,e),e--)}if(i.length)break;s++}return y(r,e-t*++s),!!i.length&&i};const u=function(e,t,a=!1){if("string"==typeof t&&!1===a)return void console.warn("props error");const r="string"==typeof t?t:t.name,n=new RegExp(`${e}.+$`);return e=`${e} ${!1===a?t.part:a}`,n.test(r)?r.replace(n,e):`${r} ${e}`};const _=function(e,t){return e>t&&(console.warn(`calculation aborted (iteration > ${t})`),!0)};const m=function(e,t,a){return Object.keys(e).forEach((r=>{const n=t.filter((e=>e.id===r)),s=e[r].parts-e[r].items+n.length;let i=0;console.log(e),n.forEach((e=>{e.part=++i,e.parts=s,a&&(e.name=H(e))})),V(r,i,s)})),t};const T=function(e,t,a,r,n){let s=null,i=0,o=D()-1;for(;o>=0;){const l=$(o);if(l.length){const t=l.reduce(((e,t)=>(e[t.id]=e[t.id]?{parts:t.parts,items:e[t.id].items+1}:{parts:t.parts,items:1},e)),{}),p=()=>{const t=C(o);y(o,t+e,(()=>{let n=t,s=0,i=e,p=a;B("axisX")||([n,s,i,p]=[s,n,p,i]),k({x:n,y:s,w:i,h:p,value:r,index:o}),l.forEach((e=>N(o,e)))})),o--},h=()=>{s.forEach((e=>{N(e.fromPlate,e),R(e.fromPlate)}))};s=W(l.map((e=>({...e})))),!1===s?p():(s=m(t,s,n),h()),i=0,L(o<0?0:o)||(j(),o--)}if(++i,_(i,t))break}};const g=function(e,t,a,r){let n=0;for(;G();){let s=!1;const i=S();(r?O(U()):a)===a&&z();e:for(let t=0;t<M();t++){const a=v(t);for(let t=0;t<G();t++){const r=X(t),o=r.w<=a.w&&r.h<=a.h,l=r.w<=a.h&&r.h<=a.w;if(o||e&&l){const o={...r,x:a.x,y:a.y,w:r.w,h:r.h,fromPlate:i};e&&l&&!o.rotate&&(o.rotate=!0),N(i,o),F(t),R(),s=!0,n=0;break e}}if(t===M()-1&&L()){let e=!0;i===D()-1&&G()&&(e=f()),e&&!s&&d()}}if(++n,_(n,t))break}};const P=function(e){const t=r.getState(),a=t.config,i=()=>e.plate>=0?e.plate:t.currentIndexPlate;switch(e.type){case"INITIAL_STATE":return r.init();case"GET_STATE":return t;case"VALIDATE_CONFIG_DATA":return r.setState({errors:n(e.config)}),r.getErrors();case"PREPARE_CONFIG_DATA":return r.setState({config:s(e.config)});case"EXTRACT_PARTS":return r.setState({parts:l(a.parts,a.name,a.length,a.partName,a.nameIsPrefix,a.minPart)});case"CALC_SIZE":return r.setState({size:a.axisX?a.length:a.height});case"CALC_SIZE_STEP":return r.setState({sizeStep:t.size*a.step});case"CALC_COUNT_PART":return r.setState({countPart:Math.round(t.size/t.sizeStep)});case"GET_CONFIG_DATA":return a.hasOwnProperty(e.key)?a[e.key]:a;case"GET_CURRENT_SIZE":return t.size||null;case"ADD_STATISTIC":{if("object"!=typeof e.obj)throw new Error("object error");const a={...t.statistic,...e.obj};return r.setState({statistic:a})}case"IS_CUT":return a.cut;case"DIVIDER":return function(e,t,a,r,n,s,i,l){const p=[];let h=null;for(const c of s){let s,E=!1;const u=()=>{h=[];for(let t=0;t<e.length;t++)h.push(...R(t,!0));_()},_=()=>{h=o(h.filter((e=>e.h>=c.h&&e.w>=t||!!(a&&!e.rotate&&e.w>=c.h&&e.h>=t)&&([e.w,e.h]=[e.h,e.w],e.rotate=!0,!0)))),h.push({w:0})},m=e=>{e.forEach((e=>k({x:e.x,w:e.w,y:e.y,h:e.h,rotate:e.rotate,value:l,index:e.fromPlate})))},T=(e=Math.round(i/2))=>{let a=0,r=[];if(u(),r.length<s)for(let i=0;i<h.length-1;i++)if(!(a+h[i+1].w>c.w)){{const s=h[i],o=s.fromPlate;s.w=s.w>e?e:s.w,a+=s.w;let l=s.w-(a>c.w?a-c.w:0),p=c.h;if(l<t)for(let e=r.length-1;e>=0;e--){const a=r[e].w-(t-l);if(a>=t){r[e].w=a,l=t;break}if(l+=r[e].w-t,r[e].w=t,0===e)return!1}r.push({...c,x:s.x,y:s.y,w:l,h:p,fromPlate:s.fromPlate,rotate:s.rotate}),k({x:s.x,w:l,y:s.y,h:p,rotate:s.rotate,value:n,index:o});for(let e=0;e<h.length;e++)h[e].fromPlate===o&&(h.splice(e,1),e--);h.push(...R(o,!0)),_(),i=-1}if(a>=c.w||r.length===s)break}return a<c.w&&e<i?(m(r),T(i)):!(a<c.w)&&r};if(s=r+2-c.parts,c&&c.rotate&&(c.rotate=!1),E=T(),!1===E)return m(p),!1;p.push(...E)}return p}(t.plates,a.minPart,a.rotate,a.maxStack,t.symbols.divide,e.items,a.length,t.symbols.unusedSpace);case"BASIC_POSITIONING":return g(a.rotate,t.maxIteration,a.length,a.axisX);case"DIVISION_OF_PRODUCTS":return T(t.sizeStep,t.maxIteration,a.height,t.symbols.unusedSpace,t.config.showPartInName);case"PUSH_NEW_PLATE":return r.setState({plates:[...t.plates,e.plate]});case"CREATE_NEW_PLATE":return c(t.plates,t.size,a.length,a.height,t.symbols.startSpace,t.symbols.unusedSpace);case"CALC_CURRENT_SIZE":return p(e.size,t.sizeStep,e.mode);case"SET_NEW_SIZE_PLATE":{if("function"!=typeof e.cb)throw new Error("cb is not a function");const a=t.plates[e.plate].size=e.size;return e.cb(),R(e.plate),a}case"GET_CURRENT_INDEX_PLATE":return t.currentIndexPlate;case"FIND_UNUSED_SPACE":return h(a.minPart,t.plates,a.axisX,t.symbols,e.index,e.divideMode);case"GET_OPTIMIZATION_LEVEL":return a.optimization;case"GET_PARTS_LENGTH":return t.parts.length;case"GET_PART_ITEM":return{...t.parts[e.item]};case"GET_MAX_X1":return Math.max(...t.plates[i()].items.map((e=>e.x+e.w)),0);case"GET_USED_PARTS":{let r;if(t.plates[e.plate].size===t.size){let n=0;t.plates[e.plate].unusedSpace.forEach((e=>{t.axisX&&e.h===a.height&&n<e.x?n=e.x:!t.axisX&&e.w===a.width&&n<e.y&&(n=e.y)})),r=O(0===n?t.size:n,"ceil")}else r=t.plates[e.plate].size;return Math.round(r/t.sizeStep)}case"REVERSE_UNUSED_SPACE":return t.plates[i()].unusedSpace.reverse();case"GET_UNUSED_SPACE_LENGTH":return t.plates[i()].unusedSpace.length;case"GET_UNUSED_SPACE_ITEM":return{...t.plates[i()].unusedSpace[e.item]};case"ADD_ITEM_TO_PLATE":{const{x:a,w:r,y:n,h:s,rotate:i,fromPlate:o}=e.item;return k({x:a,w:r,y:n,h:s,rotate:i,index:o}),t.plates[e.plateIdx].items.push(e.item)}case"CHANGE_ITEM_TO_PLATE":return["x","w","y","h","rotate","fromPlate","id","height","length","count","part","parts","name","hem","edge"].forEach((t=>{e.data.hasOwnProperty(t)&&(delete e.data[t],console.warn(`key ${t} is forbidden`))})),t.plates[e.plateIdx].items[e.item]={...t.plates[e.plateIdx].items[e.item],...e.data};case"FILL_RECT":{let{x:a,y:r,w:n,h:s,index:i=t.currentIndexPlate,value:o=1,rotate:l=!1}=e.param;l&&([n,s]=[s,n]);for(let e=a;e<n+a;e++)for(let a=r;a<s+r;a++)t.plates[i].matrix[a][e]=o;return}case"DELETE_PART_ITEM":return t.parts.splice(e.index,1);case"GET_PLATE_ITEMS_LENGTH":return t.plates[i()].items.length;case"GET_PLATES_LENGTH":return t.plates.length;case"NEXT_INDEX_PLATE":return++t.currentIndexPlate;case"SET_NEW_UNUSED_SPACE":return t.plates[i()].unusedSpace=e.value;case"GET_PLATE_ITEM":return{...t.plates[e.plateIdx].items[e.itemIdx]};case"DELETE_PLATE_ITEM":return t.plates[e.plateIdx].items.splice(e.itemIdx,1);case"GET_PLATE_SIZE":return t.plates[e.plateIdx].size;case"SELECT_ITEMS_OF_LAST_PART":return E(t.size,t.sizeStep,t.countPart,e.index,a.axisX);case"UPDATE_PART_NAME":return u(a.partName,e.partItemOrName,e.part);case"DELETE_LAST_PLATE":return t.plates.splice(-1);case"UPDATE_PARTS_INFO_IN_PLATE":{let a=e.startPart;e:for(let r in t.plates)for(let n in t.plates[r].items){const s=t.plates[r].items[n];if(s.id===e.id&&(++a,t.config.showPartInName&&(s.name=H(s,a)),s.part=a,s.parts=e.parts,a===e.parts))break e}return}case"REMOVE_NOT_NEEDED_IN_PLATE":return t.plates=t.plates.map((e=>e.items));case"GET_UNUSED_PARTS_OF_PLATE":{const r=Math.max(...t.plates[e.plateIndex].items.map((e=>a.axisX?e.x+e.w:e.y+e.h)));return O(r,"ceil")}}},I=()=>P({type:"GET_STATE"}),S=()=>P({type:"GET_CURRENT_INDEX_PLATE"}),d=()=>P({type:"NEXT_INDEX_PLATE"}),f=()=>P({type:"CREATE_NEW_PLATE"}),A=e=>P({type:"PUSH_NEW_PLATE",plate:e}),y=(e,t,a=(()=>{}))=>P({type:"SET_NEW_SIZE_PLATE",plate:e,size:t,cb:a}),N=(e,t)=>P({type:"ADD_ITEM_TO_PLATE",plateIdx:e,item:t}),x=(e,t,a)=>P({type:"CHANGE_ITEM_TO_PLATE",plateIdx:e,item:t,data:a}),w=(e,t)=>P({type:"DELETE_PLATE_ITEM",plateIdx:e,itemIdx:t}),L=e=>P({type:"GET_PLATE_ITEMS_LENGTH",plate:e}),D=()=>P({type:"GET_PLATES_LENGTH"}),b=(e,t)=>P({type:"GET_PLATE_ITEM",plateIdx:e,itemIdx:t}),C=e=>P({type:"GET_PLATE_SIZE",plateIdx:e}),O=(e,t)=>P({type:"CALC_CURRENT_SIZE",size:e,mode:t}),R=(e,t)=>P({type:"FIND_UNUSED_SPACE",index:e,divideMode:t}),G=()=>P({type:"GET_PARTS_LENGTH"}),U=e=>P({type:"GET_MAX_X1",plate:e}),z=e=>P({type:"REVERSE_UNUSED_SPACE",plate:e}),M=e=>P({type:"GET_UNUSED_SPACE_LENGTH",plate:e}),v=(e,t)=>P({type:"GET_UNUSED_SPACE_ITEM",plate:t,item:e}),X=e=>P({type:"GET_PART_ITEM",item:e}),k=e=>P({type:"FILL_RECT",param:e}),F=e=>P({type:"DELETE_PART_ITEM",index:e}),Z=(e,t)=>P({type:"SET_NEW_UNUSED_SPACE",plate:e,value:t}),$=e=>P({type:"SELECT_ITEMS_OF_LAST_PART",index:e}),H=(e,t)=>P({type:"UPDATE_PART_NAME",partItemOrName:e,part:t}),V=(e,t,a)=>P({type:"UPDATE_PARTS_INFO_IN_PLATE",id:e,startPart:t,parts:a}),j=()=>P({type:"DELETE_LAST_PLATE"}),W=e=>P({type:"DIVIDER",items:e}),B=e=>P({type:"GET_CONFIG_DATA",key:e}),q=e=>P({type:"GET_USED_PARTS",plate:e});function J(e){const t=(new Date).getTime(),a={name:"name",partName:"part",nameIsPrefix:!1,rotate:!1,cut:!1,showPartInName:!0,parts:[],length:3660,height:760,step:.25,minPart:12,maxStack:1,optimization:2,prepareOutputPlates:!0,getAllData:!1,axisX:!0,...e};P({type:"INITIAL_STATE"});let r=P({type:"VALIDATE_CONFIG_DATA",config:a});if(r.length)return r;if(r=null,(e=>{P({type:"PREPARE_CONFIG_DATA",config:e})})(a),P({type:"EXTRACT_PARTS"}),P({type:"CALC_SIZE"}),P({type:"CALC_SIZE_STEP"}),P({type:"CALC_COUNT_PART"}),f(),P({type:"BASIC_POSITIONING"}),P({type:"IS_CUT"}))for(let e=0;e<P({type:"GET_OPTIMIZATION_LEVEL"});e++){for(let e=0;e<D()-1;e++){const t=P({type:"GET_CURRENT_SIZE"});C(e)<t&&y(e,t)}P({type:"DIVISION_OF_PRODUCTS"})}else for(let e=0;e<D();e++)y(e,P({type:"GET_UNUSED_PARTS_OF_PLATE",plateIndex:e}));let n=0,s=0,i=D(),o=0,l={element:0,base:0,hem:0,edge:0},p={element:0,base:0,hem:0,edge:0};I().config.parts.forEach((e=>{const t=e.length*e.count,a=2*e.count;l.element+=t*e.height,l.base+=t*(e.height-e.hem-e.edge),l.hem+=t*e.hem,l.edge+=t*e.edge,p.element+=(e.length+e.height)*a,p.base+=(e.length+(e.height-e.hem-e.edge))*a,p.hem+=e.hem?(e.length+e.hem)*a:0,p.edge+=e.edge?(e.length+e.edge)*a:0}));for(let e=0;e<i;e++){const t=q(e);n+=t,s+=t*I().sizeStep,o+=t*I().config.step;for(let t=0;t<L(e);t++){const a=b(e,t);x(e,t,{area:{product:{element:a.length*a.height,base:a.length*(a.height-a.hem-a.edge),hem:a.length*a.hem,edge:a.length*a.edge},part:{element:a.w*a.h,base:a.w*(a.h-a.hem-a.edge),hem:a.w*a.hem,edge:a.w*a.edge}},perimeter:{product:{element:2*(a.length+a.height),base:2*(a.length+(a.height-a.hem-a.edge)),hem:a.hem?2*(a.length+a.hem):0,edge:a.edge?2*(a.length+a.edge):0},part:{element:2*(a.w+a.h),base:2*(a.w+(a.h-a.hem-a.edge)),hem:a.hem?2*(a.w+a.hem):0,edge:a.edge?2*(a.w+a.edge):0}}})}}var h;return h={countOfParts:n,totalLength:s,countOfPlates:i,countPartsInPlates:o,perimeter:p,area:l,time:.001*((new Date).getTime()-t)},P({type:"ADD_STATISTIC",obj:h}),B("prepareOutputPlates")&&P({type:"REMOVE_NOT_NEEDED_IN_PLATE"}),B("getAllData")?I():{config:B(),plates:I().plates,statistic:I().statistic,countPart:I().countPart,mainSize:I().size,errors:I().errors,sizeStep:I().sizeStep}}var K=t.s;export{K as cutter};